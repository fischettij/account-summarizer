// Code generated by MockGen. DO NOT EDIT.
// Source: summarizer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSummarizerManager is a mock of SummarizerManager interface.
type MockSummarizerManager struct {
	ctrl     *gomock.Controller
	recorder *MockSummarizerManagerMockRecorder
}

// MockSummarizerManagerMockRecorder is the mock recorder for MockSummarizerManager.
type MockSummarizerManagerMockRecorder struct {
	mock *MockSummarizerManager
}

// NewMockSummarizerManager creates a new mock instance.
func NewMockSummarizerManager(ctrl *gomock.Controller) *MockSummarizerManager {
	mock := &MockSummarizerManager{ctrl: ctrl}
	mock.recorder = &MockSummarizerManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSummarizerManager) EXPECT() *MockSummarizerManagerMockRecorder {
	return m.recorder
}

// SendSummary mocks base method.
func (m *MockSummarizerManager) SendSummary(ctx context.Context, email, filaPath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendSummary", ctx, email, filaPath)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendSummary indicates an expected call of SendSummary.
func (mr *MockSummarizerManagerMockRecorder) SendSummary(ctx, email, filaPath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendSummary", reflect.TypeOf((*MockSummarizerManager)(nil).SendSummary), ctx, email, filaPath)
}
