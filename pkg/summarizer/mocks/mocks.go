// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fischettij/account-summarizer/pkg/summarizer (interfaces: Summary)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockSummary is a mock of Summary interface.
type MockSummary struct {
	ctrl     *gomock.Controller
	recorder *MockSummaryMockRecorder
}

// MockSummaryMockRecorder is the mock recorder for MockSummary.
type MockSummaryMockRecorder struct {
	mock *MockSummary
}

// NewMockSummary creates a new mock instance.
func NewMockSummary(ctrl *gomock.Controller) *MockSummary {
	mock := &MockSummary{ctrl: ctrl}
	mock.recorder = &MockSummaryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSummary) EXPECT() *MockSummaryMockRecorder {
	return m.recorder
}

// AverageCreditAmount mocks base method.
func (m *MockSummary) AverageCreditAmount() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AverageCreditAmount")
	ret0, _ := ret[0].(float64)
	return ret0
}

// AverageCreditAmount indicates an expected call of AverageCreditAmount.
func (mr *MockSummaryMockRecorder) AverageCreditAmount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AverageCreditAmount", reflect.TypeOf((*MockSummary)(nil).AverageCreditAmount))
}

// AverageDebitAmount mocks base method.
func (m *MockSummary) AverageDebitAmount() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AverageDebitAmount")
	ret0, _ := ret[0].(float64)
	return ret0
}

// AverageDebitAmount indicates an expected call of AverageDebitAmount.
func (mr *MockSummaryMockRecorder) AverageDebitAmount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AverageDebitAmount", reflect.TypeOf((*MockSummary)(nil).AverageDebitAmount))
}

// Balance mocks base method.
func (m *MockSummary) Balance() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Balance")
	ret0, _ := ret[0].(float64)
	return ret0
}

// Balance indicates an expected call of Balance.
func (mr *MockSummaryMockRecorder) Balance() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Balance", reflect.TypeOf((*MockSummary)(nil).Balance))
}

// TransactionsByMonth mocks base method.
func (m *MockSummary) TransactionsByMonth() map[time.Month]int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransactionsByMonth")
	ret0, _ := ret[0].(map[time.Month]int)
	return ret0
}

// TransactionsByMonth indicates an expected call of TransactionsByMonth.
func (mr *MockSummaryMockRecorder) TransactionsByMonth() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransactionsByMonth", reflect.TypeOf((*MockSummary)(nil).TransactionsByMonth))
}
